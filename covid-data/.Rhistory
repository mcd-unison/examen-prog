install.packages("base64enc")
install.packages("digest")
install.packages("rmarkdown")
# Install from CRAN
install.packages('rmarkdown')
# Or if you want to test the development version,
# install from GitHub
if (!requireNamespace("devtools"))
install.packages('devtools')
devtools::install_github('rstudio/rmarkdown')
install.packages('ggplot2')
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages('tinytex')
tinytex::install_tinytex()  # install TinyTeX
install.packages('tinytex')
tinytex::install_tinytex()  # install TinyTeX
install.packages('tinytex')
install.packages('tinytex')
install.packages("tinytex")
# (a) P[Z <= 1.5] = F(1.5)
pnorm(1.5)
tabla.prob <- data.frame(x=x, dnorm(x))
# grafica
x<- seq(-3,3,0.1)
tabla.prob <- data.frame(x=x, dnorm(x))
View(tabla.prob)
plot(tabla.prob)
plot(tabla.prob,type="l")
plot(tabla.prob,type="l")
dnorm(0)
points(1.5,0, col="red", pch= 19)
abline(V=1.5)
abline(V=1.5)
abline(v=1.5)
#(b) hallar Hallar P[ -2 < = Z <= 1.5]
pnorm(1.5)-prnorm (-2)
#(C)
qnorm(0.95)
#(D) que valor de x hace que la probabilidad que la ariable aleatoriria tome valores
qnorm(0.975)
#Solucion
# (a) Hallar P[X <= 25] = F(25)
pnorm(25, mean = 20, sd = 3)
x<- seq(5,35,0.1)
tabla.prob <- data.frame(x=x, dnorm(x,20,3)) #segundo parametro media, trerceo distribucion
View(tabla.prob)
View(tabla.prob)
plot(tabla.prob,type="l")
points(25,0, col="red", pch= 19)
abline(v=25)
abline(h=25)
abline(h=25)
abline(v=25)
plot(tabla.prob,type="l")
points(25,0, col="red", pch= 19)
abline(v=25)
# (b) Hallar P[ 17 < = X <= 25]
pnorm(25,20,3) - pnorm(17,20.3)
tabla.prob <- data.frame(x=x, dnorm(x,20,3)) #segundo parametro media, trerceo distribucion
plot(tabla.prob,type="l")
points(25,0, col="red", pch= 19)
abline(v=25)
points(17,0, col="red", pch= 19)
abline(v=17)
# (a) P[Z <= 1.5] = F(1.5)
pnorm(1.5)
# (a) P[Z <= 1.5] = F(1.5)
pnorm(1.5,0,1)
# (a) P[Z <= 1.5] = F(1.5)
pnorm(1.5)
# (a) P[Z <= 1.5] = F(1.5)
pnorm(1.5)
# grafica
x<- seq(-3,3,0.1)
tabla.prob <- data.frame(x=x, dnorm(x))
plot(tabla.prob,type="l")
View(tabla.prob)
#(C)
qnorm(0.95)
pnorm(1.644)
pnorm(1.644854)
#(c)Hallar x tal que P[X <= x] = 0.50
qnorm(0.5,20,3)
pnorm(20,20,3)
# (d) Hallar x tal que P[Z <= x] = 0.75
qnorm(.75,20,3)
pnorm(22.02347,20,3)
#Solucion
# (a) Hallar P[X <= 25] = F(25)
pnorm(25, mean = 20, sd = 3) #sd = desviacion
x<- seq(5,35,0.1)
tabla.prob <- data.frame(x=x, dnorm(x,20,3)) #segundo parametro media, trerceo distribucion
plot(tabla.prob,type="l")
points(25,0, col="red", pch= 19)
abline(v=25)
tabla.prob <- data.frame(x=x, dnorm(x,20,3)) #segundo parametro media, trerceo distribucion
View(tabla.prob)
tabla.prob <- data.frame(x=x, pnorm(x,20,3)) #segundo parametro media, trerceo distribucion
plot(tabla.prob,type="l")
points(25,0, col="red", pch= 19)
abline(v=25)
tabla.prob <- data.frame(x=x, dnorm(x,20,3)) #segundo parametro media, trerceo distribucion
plot(tabla.prob,type="l")
points(25,0, col="red", pch= 19)
abline(v=25)
# (e) Compara graficamente las densidades N(20, 3) y N(20, 5)
x<- seq(5,35,0.1)
tabla.prob <- data.frame(x=x, dnorm(x,20,3)) #segundo parametro media, trerceo distribucion
plot(tabla.prob,type="l")
lines(x,dnorm(x,20,5),col ="blue")
plot(tabla.prob,type="l")
lines(x,dnorm(x,20,5),col ="blue")
legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
# (e) Compara graficamente las densidades N(20, 3) y N(20, 5)
x<- seq(5,35,0.1)
tabla.prob <- data.frame(x=x, dnorm(x,20,3)) #segundo parametro media, trerceo distribucion
plot(tabla.prob,type="l")
lines(x,dnorm(x,20,5),col ="blue")
legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
# (e) Compara graficamente las densidades N(20, 3) y N(20, 5)
x<- seq(5,35,0.1)
tabla.prob <- data.frame(x=x, dnorm(x,20,3)) #segundo parametro media, trerceo distribucion
plot(tabla.prob,type="l")
lines(x,dnorm(x,20,5),col ="blue")
#legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
legend(5,.12)
#legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
legend(5,.12,"hola")
#legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
legend(5,.12,"hola""como estas")
#legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
legend(5,.12,"hola","como estas")
#legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
legend(5,.12,c("hola","como estas"))
#legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
legend(5,.12,c("hola","como estas"),pch=c("x"))
#legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
legend(5,.12,c("hola","como estas"),pch=c("*"))
#legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
legend(5,.12,c("hola","como estas"),pch=c("*"),col="red","blue")
#legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
legend(5,.12,c("hola","como estas"),pch=c("*","o"),col="red","blue")
plot(tabla.prob,type="l")
lines(x,dnorm(x,20,5),col ="blue")
#legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
legend(5,.12,c("hola","como estas"),pch=c("*","o"),col="red","blue")
#legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
legend(5,.12,c("hola","como estas"),pch=c("*","*"),col="red","blue")
lines(x,dnorm(x,20,5),col ="blue")
#legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
legend(5,.12,c("hola","como estas"),pch=c("*","*"),col="red","blue")
#legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
legend(5,.12,c("hola","como estas"),pch=c("*","*"),col=c("red","blue")
#legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
legend(5,.12,c("hola","como estas"),pch=c("*","*"),col=c("red","blue")
plot(tabla.prob,type="l")
lines(x,dnorm(x,20,5),col ="blue")
#legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
#legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
legend(5,.12,c("hola","como estas"),pch=c("*","*"),col=c("red","blue")
#legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
legend(5,.12,c("hola","como estas"),pch=c("*","*"),col=c("red","blue"))
#legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
legend(5,.12,c("hola","como estas"),pch=c("*","*"),col=c("red","blue"))
#legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
legend(5,.12,c("hola","como estas"),pch=c("*","*"),col=c("red","blue"))
#legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
legend(5,.12,c("hola","como estas"),pch=c("*"),col=c("red","blue"))
lines(x,dnorm(x,20,5),col ="blue")
#legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
legend(5,.12,c("hola","como estas"),pch=c("*"),col=c("red","blue"))
plot(tabla.prob,type="l")
lines(x,dnorm(x,20,5),col ="blue")
#legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
legend(5,.12,c("hola","como estas"),pch=c("*"),col=c("red","blue"))
legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
plot(tabla.prob,type="l")
lines(x,dnorm(x,20,5),col ="blue")
legend(5,0.12,legend=c("N(20,3)","N(20,5)"),pch=c("-","-"),col=c("red","blue"))
# (a) Compara graficamente tres densidades Chi cuadrada con n=3, 8 10 grados de libertad
x<- seq(0,20,0.1)
tabla<- data.frame(x=x,dchisq(x,df=3))
plot(tabla,type="l", col="red")
lines(x,dchisq(x,8),col="blue")
lines(x,dchisq(x,10),col="yellow")
legend(12,.2,legend=c("Chisq(3)","Chisq(8)","Chisq(10)"),pch=c("-","-","-"),col=c("red","blue","yellow"))
legend(12,.20,legend=c("Chisq(3)","Chisq(8)","Chisq(10)"),pch=c("-","-","-"),col=c("red","blue","yellow"))
plot(tabla,type="l", col="red")
lines(x,dchisq(x,8),col="blue")
lines(x,dchisq(x,10),col="yellow")
legend(12,.20,legend=c("Chisq(3)","Chisq(8)","Chisq(10)"),pch=c("-","-","-"),col=c("red","blue","yellow"))
plot(tabla,type="l", col="red")
lines(x,dchisq(x,8),col="blue")
lines(x,dchisq(x,10),col="yellow")
legend(12,0.20,legend=c("Chisq(3)","Chisq(8)","Chisq(10)"),pch=c("-","-","-"),col=c("red","blue","yellow"))
legend(12,0.25,legend=c("Chisq(3)","Chisq(8)","Chisq(10)"),pch=c("-","-","-"),col=c("red","blue","yellow"))
tabla<- data.frame(x=x,dchisq(x,df=3))
plot(tabla,type="l", col="red")
lines(x,dchisq(x,8),col="blue")
lines(x,dchisq(x,10),col="yellow")
legend(12,0.25,legend=c("Chisq(3)","Chisq(8)","Chisq(10)"),pch=c("-","-","-"),col=c("red","blue","yellow"))
# (b) Si X ~ ChiSq(10) calcula P[3.94 <= X <= 18.3]
pchisq(18.3,10)-pchisq(3.94,10)
# (c) Hallar el valor de x tal que P[X <= x] = 0.70
qchisq(0.70)
# (c) Hallar el valor de x tal que P[X <= x] = 0.70
qchisq(0.70,10)
# (c) Hallar el valor de x tal que P[X <= x] = 0.70
qchisq(0.70,df=10)
# (a) Compara graficamente tres densidades t-student con n= 12, 5 y 1 grados de libertad
x<- seq(-3,3,0.1)
tabla<-data.frame(x=x,dt(x,df=12))
plot(tabla,type="l",col="blue")
plot(tabla,type="l",col="blue")
# (a) Compara graficamente tres densidades t-student con n= 12, 5 y 1 grados de libertad
x<- seq(-3,3,0.1)
tabla<-data.frame(x=x,dt(x,df=12))
plot(tabla,type="l",col="blue")
plot(tabla,type="l",col="red")
lines(x,dt(x,df=1),col="yellow")
lines(x,dt(x,df=5),col="blue")
legend(-3,0.4,c("t(12","t(5)","t(1)"),pch=c("-","-","-"),col="red","blue","yellow")
tabla<-data.frame(x=x,dt(x,df=12))
plot(t8abla,type="l",col="red")
lines(x,dt(x,df=5),col="blue")
lines(x,dt(x,df=1),col="yellow")
legend(-3,0.4,c("t(12","t(5)","t(1)"),pch=c("-","-","-"),col="red","blue","yellow")
# (a) Compara graficamente tres densidades t-student con n= 12, 5 y 1 grados de libertad
x<- seq(-3,3,0.1)
tabla<-data.frame(x=x,dt(x,df=12))
plot(t8abla,type="l",col="red")
lines(x,dt(x,df=5),col="blue")
lines(x,dt(x,df=1),col="yellow")
legend(-3,0.4,c("t(12","t(5)","t(1)"),pch=c("-","-","-"),col="red","blue","yellow")
# (a) Compara graficamente tres densidades t-student con n= 12, 5 y 1 grados de libertad
x<- seq(-3,3,0.1)
tabla<-data.frame(x=x,dt(x,df=12))
plot(t8abla,type="l",col="red")
lines(x,dt(x,df=5),col="blue")
lines(x,dt(x,df=1),col="yellow")
legend(-3,0.4,c("t(12","t(5)","t(1)"),pch=c("-","-","-"),col="red","blue","yellow")
plot(tabla,type="l",col="red")
lines(x,dt(x,df=5),col="blue")
lines(x,dt(x,df=1),col="yellow")
legend(-3,0.4,c("t(12)","t(5)","t(1)"),pch=c("-","-","-"),col="red","blue","yellow")
legend(-3,0.4,c("t(12)","t(5)","t(1)"),pch=c("-","-","-"),col=c("red","blue","yellow"))
# (a) Compara graficamente tres densidades t-student con n= 12, 5 y 1 grados de libertad
x<- seq(-3,3,0.1)
tabla<-data.frame(x=x,dt(x,df=12))
plot(tabla,type="l",col="red")
lines(x,dt(x,df=5),col="blue")
lines(x,dt(x,df=1),col="yellow")
legend(-3,0.4,c("t(12)","t(5)","t(1)"),pch=c("-","-","-"),col=c("red","blue","yellow"))
# (a) Compara graficamente tres densidades t-student con n= 12, 5 y 1 grados de libertad
x<- seq(-3,3,0.1)
tabla<-data.frame(x=x,dt(x,df=12))
plot(tabla,type="l",col="red")
lines(x,dt(x,df=5),col="blue")
lines(x,dt(x,df=1),col="yellow")
legend(-3,0.4,c("t(12)","t(5)","t(1)"),pch=c("-","-","-"),col=c("red","blue","yellow"))
# (b) Si T ~ t(12) calcula P[T <= 1.4]
# (b) Si T ~ t(12) calcula P[T <= 1.4]
# (c) Hallar el valor t tal que P[T <= t] = 0.95
##################
##################
#    F           #
# (a) Compara graficamente las densidades de F(40,45) y F(10,15)
# (a) Compara graficamente las densidades de F(40,45) y F(10,15)
# (b) Si F ~ F(10,15) calcula P[ F <= 3]
# (a) Compara graficamente las densidades de F(40,45) y F(10,15)
# (b) Si F ~ F(10,15) calcula P[ F <= 3]
# (b) calcula P[ F >= 2]
###########
###########
#   TLC   #
#######################################################
#######################################################
#  USO DEL TLC: APROXIMACION NORMAL A LA BINOMIAL     #
# (a) Si X1,...,X70 ~ Bernoulli(p=0.4) independientes y sea Y=X1+...X70,
#######comparacion con la normal
lines(x,pnorm(x),(lty=2))
#######comparacion con la normal
lines(x,pnorm(x),lty=2)
#######comparacion con la normal
lines(x,dnorm(x),lty=2)
# (a) Compara graficamente tres densidades t-student con n= 12, 5 y 1 grados de libertad
x<- seq(-3,3,0.1)
tabla<-data.frame(x=x,dt(x,df=12))
plot(tabla,type="l",col="red")
lines(x,dt(x,df=5),col="blue")
lines(x,dt(x,df=1),col="yellow")
legend(-3,0.4,c("t(12)","t(5)","t(1)"),pch=c("-","-","-"),col=c("red","blue","yellow"))
#######comparacion con la normal
lines(x,dnorm(x),lty=2)
# (b) Si T ~ t(12) calcula P[T <= 1.4]
dt(1.4,12)
# (b) Si T ~ t(12) calcula P[T <= 1.4]
dt(1.4,df=12)
# (b) Si T ~ t(12) calcula P[T <= 1.4]
pt(1.4,df=12)
# (c) Hallar el valor t tal que P[T <= t] = 0.95
qt(0.95,df=12)
# (c) Hallar el valor t tal que P[T <= t] = 0.95
qt(0.95,12)
# (b) Si T ~ t(12) calcula P[T <= 1.4]
pt(1.4,12)
# (c) Hallar el valor t tal que P[T <= t] = 0.95
qt(0.95,12)
pt(1.78228,12)
# (a) Compara graficamente las densidades de F(40,45) y F(10,15)
x<- seq(0,5,0.1)
tabla<-data.frame(x=x,df(x,df1=40,df2=45))
plot(tabla,type="l",col="red")
View(tabla)
lines(x,df(x,10,15),col="blue")
legend(3,0.8,c("F(40,45","F(10,15)"),pch=x("-","-"),col=c("red","blue"))
legend(3,0.8,c("F(40,45","F(10,15)"),pch=c("-","-"),col=c("red","blue"))
# (b) Si F ~ F(10,15) calcula P[ F <= 3]
pt(3,df1=10,df?=15)
# (b) Si F ~ F(10,15) calcula P[ F <= 3]
pt(3,df1=10,df=15)
# (b) Si F ~ F(10,15) calcula P[ F <= 3]
pt(3,df1=10,df2=15)
# (b) Si F ~ F(10,15) calcula P[ F <= 3]
pt(3,df1=10,df2=15)
# (b) Si F ~ F(10,15) calcula P[ F <= 3]
pt(3,10,15)
# (b) Si F ~ F(10,15) calcula P[ F <= 3]
pf(3,10,15)
# (b) calcula P[ F >= 2]
1- pf(2)
# (b) calcula P[ F >= 2]
1- pf(2,10,15)
pf(8,10,15)
# (a) Si X1,...,X70 ~ Bernoulli(p=0.4) independientes y sea Y=X1+...X70,
#     Calcula P[ Y <= 14]
##### en particular para este ejercicio, N( (n*0.4) , (n* (p*(1-p))) )
#####  siendo n=70 y p = 0.4
#####   N(28,16.8)
###Por el TLC Y~ N(mu=28,sigma²=(70*0.24))
### P[Y <=14] es aprox P[N<=14] = F(14)
pnorm(14,28,sqrt(16.8))
# (a) Si X1,...,X70 ~ Bernoulli(p=0.4) independientes y sea Y=X1+...X70,
#     Calcula P[ Y <= 14]
##### en particular para este ejercicio, N( (n*0.4) , (n* (p*(1-p))) )
#####  siendo n=70 y p = 0.4
#####   N(28,16.8)
###Por el TLC Y~ N(mu=28,sigma²=(70*0.24))
### P[Y <=14] es aprox P[N<=14] = F(14)
pnorm(14,mean= 28,sd= sqrt(16.8))
# (b) Como Y representa la cantidad de exitos en n=70 ensayos de Bernoulli ind.
#     entonces debe ser que Y ~ Binomial(n=70,p=0.4)
#     Calcula P[ Y <= 14] usando la distribucion binomial
pbinom(14,70,.4)
# (c) Compara las densidades graficamente
x<- seq(10,50,.1)
tabla<-data.frame(x=x,dnor(x,16.8,sqrt(16.8) )
tabla<-data.frame(x=x,dnorm(x,16.8,sqrt(16.8) )
tabla<-data.frame(x=x,dnorm(x,16.8,sqrt(16.8) ))
plot(tabla,type="l",col="red")
y<-seq(10,50)
tabla2<-data.frame(x=y,dbinom(y,70,0.4))
lines(tabla2,col="blue")
lines(tabla2,type="p",col="blue")
legend(45,0.8, c("Normal","Binomial"),pch=c("-","-"),col=c("red","blue"))
legend(45,0.8, c("Normal","Binomial"),pch=c("-","-"),col=c("red","blue"))
legend(45,0.08, c("Normal","Binomial"),pch=c("-","-"),col=c("red","blue"))
legend(40,.08, c("Normal","Binomial"),pch=c("-","-"),col=c("red","blue"))
# (c) Compara las densidades graficamente
x<- seq(10,50,.1)
tabla<-data.frame(x=x,dnorm(x,16.8,sqrt(16.8) ))
plot(tabla,type="l",col="red")
y<-seq(10,50)
tabla2<-data.frame(x=y,dbinom(y,70,0.4))
lines(tabla2,type="p",col="blue")
legend(40,.08, c("Normal","Binomial"),pch=c("-","-"),col=c("red","blue"))
legend(30,.08, c("Normal","Binomial"),pch=c("-","-"),col=c("red","blue"))
# (c) Compara las densidades graficamente
x<- seq(10,50,.1)
tabla<-data.frame(x=x,dnorm(x,16.8,sqrt(16.8) ))
plot(tabla,type="l",col="red")
y<-seq(10,50)
tabla2<-data.frame(x=y,dbinom(y,70,0.4))
lines(tabla2,type="p",col="blue")
legend(30,.08, c("Normal","Binomial"),pch=c("-","-"),col=c("red","blue"))
# (c) Compara las densidades graficamente
x<- seq(10,50,.1)
tabla<-data.frame(x=x,dnorm(x,16.8,sqrt(16.8) ))
plot(tabla,type="l",col="red")
y<-seq(10,50)
tabla2<-data.frame(x=y,dbinom(y,70,0.4))
lines(tabla2,type="p",col="blue")
legend(45,.08, c("Normal","Binomial"),pch=c("-","-"),col=c("red","blue"))
legend(40,.08, c("Normal","Binomial"),pch=c("-","-"),col=c("red","blue"))
# (a) Compara graficamente las densidades de F(40,45) y F(10,15)
x<- seq(0,5,0.1)
tabla<-data.frame(x=x,df(x,df1=40,df2=45))
plot(tabla,type="l",col="red")
lines(x,df(x,10,15),col="blue")
legend(3,0.8,c("F(40,45","F(10,15)"),pch=c("-","-"),col=c("red","blue"))
# (a) Si X1,...,X70 ~ Bernoulli(p=0.4) independientes y sea Y=X1+...X70,
#     Calcula P[ Y <= 14]
##### en particular para este ejercicio, N( (n*0.4) , (n* (p*(1-p))) )
#####  siendo n=70 y p = 0.4
#####   N(28,16.8)
###Por el TLC Y~ N(mu=28,sigma²=(70*0.24))
### P[Y <=14] es aprox P[N<=14] = F(14)
pnorm(14,mean= 28,sd= sqrt(16.8))
# (b) Como Y representa la cantidad de exitos en n=70 ensayos de Bernoulli ind.
#     entonces debe ser que Y ~ Binomial(n=70,p=0.4)
#     Calcula P[ Y <= 14] usando la distribucion binomial
pbinom(14,70,.4)
# (c) Compara las densidades graficamente
x<- seq(10,50,.1)
tabla<-data.frame(x=x,dnorm(x,16.8,sqrt(16.8) ))
plot(tabla,type="l",col="red")
y<-seq(10,50)
tabla2<-data.frame(x=y,dbinom(y,70,0.4))
lines(tabla2,type="p",col="blue")
legend(40,.08, c("Normal","Binomial"),pch=c("-","-"),col=c("red","blue"))
tabla<-data.frame(x=x,dnorm(x,28,sqrt(16.8) ))
plot(tabla,type="l",col="red")
y<-seq(10,50)
tabla2<-data.frame(x=y,dbinom(y,70,0.4))
lines(tabla2,type="p",col="blue")
#P[163 <= X.bar <= 170] = F(170)-F(163)
pnorm(170,mean=167,sd=27/sqrt(36))-pnorm(163,mean=167,sd=27/sqrt(36))
# Solucion.
diametrotallo <- c(2.3, 2.6, 2.4, 2.2,2.3, 2.5, 1.9, 2.0)
library(car)
library(carData)
library(car)
library("car")
library(cardata)
library(carData)
hist(diametrotallo)
#Grafica cuantil-cuantil para analizar la normalidad
qqnorm(diametrotallo,pch=20)
#Grafica cuantil-cuantil para analizar la normalidad
qqnorm(diametrotallo,pch=20,type"l")
#Grafica cuantil-cuantil para analizar la normalidad
qqnorm(diametrotallo,pch=20,type="l")
#Grafica cuantil-cuantil para analizar la normalidad
qqnorm(diametrotallo,pch=20,type="p")
#Grafica cuantil-cuantil para analizar la normalidad
qqnorm(diametrotallo,pch=20)
qqline(diametrotallo)
qqPlot(diametrotallo)
install.packages("car")
library(car)
qqPlot(diametrotallo)
qqṕlot(diametrotallo)
qqplot(diametrotallo)
qqplot(diametrotallo)
library("car")
install.packages("car")
library("car")
install.packages(""car"")
qqPlot(diametrotallo)
library("car")
qqPlot(diametrotallo)
install.packages("car")
library("car")
qqPlot(diametrotallo)
install.packages("car")
require(package)
require(car)
qqPlot(diametrotallo)
install.packages('txtplot')
library(txtplot)
install.packages('car')
library("carData")
qqPlot(diametrotallo)
qqplot(diametrotallo)
library("carData")
library("car")
qqPlot(diametrotallo)
library("car")
qqPlot(diametrotallo)
install.packages('car')
library("car")
qqPlot(diametrotallo)
install.packages('car')
library("car")
library(carData)
install.packages('car')
library("car")
install.packages("car")
install.packages("rio")
install.packages("curl")
install.packages('car')
install.packages("curl")
install.packages("deb")
install.packages("curl")
library(curl)
install.packages('car')
library("car")
qqPlot(diametrotallo)
qqPlot(diametrotallo)
limsup<- mean(diametrotallo)+qnorm(0.95)*(0.24)/sqrt(8)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
dataset<- read.csv("200511COVID19MEXICO.csv")
setwd("~/Escritorio/EXAMEN_PROGRAMACION/examen-prog/covid-data")
dataset<- read.csv("200511COVID19MEXICO.csv")
mx=filter(dataset,'Edad')
select(dataset,Edad)
library(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
select(dataset,Edad)
